from flask import Flask, render_template, request, redirect, url_for
import pandas as pd
import random

app = Flask(__name__)

cached_df = None

def generate_mock_data():
    subjects = ['Math', 'Science', 'History', 'Biology', 'Chemistry']
    rows = []
    for i in range(100):
        rows.append({
            'SUBJECT_NAME': random.choice(subjects),
            'STUDENT_ID': f"S{i:03}",
            'SCORE': random.randint(60, 100),
            'GRADE': random.choice(['A', 'B', 'C']),
            'TEACHER': random.choice(['Smith', 'Johnson', 'Lee']),
            'TERM': random.choice(['Fall', 'Spring']),
            'YEAR': random.choice([2022, 2023]),
            'ATTENDANCE': f"{random.randint(80, 100)}%",
            'COMMENTS': random.choice(['Excellent', 'Good', 'Average'])
        })
    return pd.DataFrame(rows)

@app.route('/', methods=['GET', 'POST'])
def dashboard():
    global cached_df
    if cached_df is None:
        cached_df = generate_mock_data()

    selected_subject = request.form.get('subject_name')
    subject_list = sorted(cached_df['SUBJECT_NAME'].dropna().unique().tolist())

    if selected_subject and selected_subject != "All":
        filtered_df = cached_df[cached_df['SUBJECT_NAME'] == selected_subject]
    else:
        filtered_df = cached_df.copy()

    table_data = filtered_df.to_dict(orient='records')
    columns = filtered_df.columns.tolist()

    return render_template("dashboard.html",
                           table_data=table_data,
                           columns=columns,
                           subject_list=subject_list,
                           selected_subject=selected_subject or "All")

@app.route('/refresh', methods=['POST'])
def refresh_data():
    global cached_df
    cached_df = generate_mock_data()
    return redirect(url_for('dashboard'))

if __name__ == "__main__":
    app.run(debug=True)


<!DOCTYPE html>
<html>
<head>
    <title>Plain Dashboard</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
</head>
<body>

    <h1>ðŸ“Š Subject Dashboard</h1>

    <form method="POST" action="/">
        <label for="subject_name">Filter by Subject Name:</label>
        <select name="subject_name" id="subject_name">
            <option value="All" {% if selected_subject == "All" %}selected{% endif %}>All</option>
            {% for subject in subject_list %}
                <option value="{{ subject }}" {% if selected_subject == subject %}selected{% endif %}>{{ subject }}</option>
            {% endfor %}
        </select>
        <button type="submit">Apply Filter</button>
    </form>

    <form method="POST" action="{{ url_for('refresh_data') }}">
        <button type="submit">ðŸ”„ Refresh Data</button>
    </form>

    <div class="table-container">
        <table>
            <thead>
                <tr>
                    {% for col in columns %}
                        <th>{{ col }}</th>
                    {% endfor %}
                </tr>
            </thead>
            <tbody>
                {% for row in table_data %}
                    <tr>
                        {% for col in columns %}
                            <td>{{ row[col] }}</td>
                        {% endfor %}
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>

</body>
</html>



body {
    font-family: Arial, sans-serif;
    padding: 30px;
    background-color: #f2f2f2;
    color: #333;
}

h1 {
    margin-bottom: 20px;
}

form {
    margin-bottom: 15px;
}

select, button {
    padding: 6px 12px;
    font-size: 14px;
    margin-right: 10px;
}

.table-container {
    overflow-x: auto;
}

table {
    border-collapse: collapse;
    width: 100%;
    background-color: white;
}

th, td {
    border: 1px solid #999;
    padding: 8px;
    text-align: left;
}

th {
    background-color: #e4e4e4;
}


Flask
pandas
