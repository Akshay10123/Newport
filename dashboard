app.py

from flask import Flask, render_template, request, redirect, url_for
import snowflake.connector
import pandas as pd

app = Flask(__name__)

# Cached data
cached_df = None

# Snowflake connection config
SNOWFLAKE_CONFIG = {
    'user': '<YOUR_USERNAME>',
    'password': '<YOUR_PASSWORD>',
    'account': '<YOUR_ACCOUNT>',
    'warehouse': '<YOUR_WAREHOUSE>',
    'database': '<YOUR_DATABASE>',
    'schema': '<YOUR_SCHEMA>',
}

# Your query (assumed ready)
SNOWFLAKE_QUERY = """
SELECT * FROM YOUR_TABLE
"""

def get_snowflake_data():
    conn = snowflake.connector.connect(**SNOWFLAKE_CONFIG)
    df = pd.read_sql(SNOWFLAKE_QUERY, conn)
    conn.close()
    return df

@app.route('/', methods=['GET', 'POST'])
def dashboard():
    global cached_df

    # Load and cache data if not already loaded
    if cached_df is None:
        cached_df = get_snowflake_data()

    # Get selected filter
    selected_subject = request.form.get('subject_name')

    # Get unique subject names for the dropdown
    subject_list = sorted(cached_df['Subject_name'].dropna().unique().tolist())

    # Filter data if a subject is selected
    if selected_subject and selected_subject != "All":
        filtered_df = cached_df[cached_df['Subject_name'] == selected_subject]
    else:
        filtered_df = cached_df.copy()

    # Convert dataframe to list of dicts for table
    table_data = filtered_df.to_dict(orient='records')
    columns = filtered_df.columns.tolist()

    return render_template('dashboard.html',
                           table_data=table_data,
                           columns=columns,
                           subject_list=subject_list,
                           selected_subject=selected_subject or "All")

@app.route('/refresh', methods=['POST'])
def refresh_data():
    global cached_df
    cached_df = get_snowflake_data()
    return redirect(url_for('dashboard'))

if __name__ == '__main__':
    app.run(debug=True)

html

<!DOCTYPE html>
<html>
<head>
    <title>Dashboard</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <style>
        body {
            padding: 30px;
        }
        .table-container {
            margin-top: 30px;
        }
        .filter-section {
            margin-bottom: 20px;
        }
    </style>
</head>
<body>

    <h2 class="mb-4">ðŸ“Š Subject Dashboard</h2>

    <form method="POST" action="/">
        <div class="row filter-section align-items-end">
            <div class="col-md-4">
                <label for="subject_name" class="form-label">Filter by Subject Name:</label>
                <select class="form-select" name="subject_name" id="subject_name">
                    <option {{ 'selected' if selected_subject == "All" }}>All</option>
                    {% for subject in subject_list %}
                        <option value="{{ subject }}" {% if selected_subject == subject %}selected{% endif %}>{{ subject }}</option>
                    {% endfor %}
                </select>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary">Apply Filter</button>
            </div>
            <div class="col-md-2">
                <form method="POST" action="{{ url_for('refresh_data') }}">
                    <button type="submit" class="btn btn-warning">ðŸ”„ Refresh</button>
                </form>
            </div>
        </div>
    </form>

    <div class="table-container">
        <table class="table table-bordered table-striped">
            <thead class="table-dark">
                <tr>
                    {% for col in columns %}
                        <th>{{ col }}</th>
                    {% endfor %}
                </tr>
            </thead>
            <tbody>
                {% for row in table_data %}
                    <tr>
                        {% for col in columns %}
                            <td>{{ row[col] }}</td>
                        {% endfor %}
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>

</body>
</html>

requirements.txt 

Flask
snowflake-connector-python
pandas
          
