from flask import Flask, render_template, request, redirect, url_for
import pandas as pd
import random

app = Flask(__name__)

# Cached mock data
cached_df = None

# Generate mock data
def generate_mock_data():
    subjects = ['Math', 'Science', 'History', 'Biology', 'Chemistry']
    rows = []
    for i in range(100):  # 100 sample rows
        row = {
            'SUBJECT_NAME': random.choice(subjects),
            'STUDENT_ID': f"S{i:03d}",
            'SCORE': random.randint(60, 100),
            'GRADE': random.choice(['A', 'B', 'C', 'D']),
            'TEACHER': random.choice(['Mr. Smith', 'Ms. Johnson', 'Dr. Lee']),
            'TERM': random.choice(['Fall', 'Spring', 'Summer']),
            'YEAR': random.choice([2022, 2023, 2024]),
            'ATTENDANCE': f"{random.randint(85, 100)}%",
            'COMMENTS': random.choice(['Good', 'Average', 'Excellent'])
        }
        rows.append(row)
    return pd.DataFrame(rows)

@app.route('/', methods=['GET', 'POST'])
def dashboard():
    global cached_df

    if cached_df is None:
        cached_df = generate_mock_data()

    selected_subject = request.form.get('subject_name')
    subject_list = sorted(cached_df['SUBJECT_NAME'].dropna().unique().tolist())

    if selected_subject and selected_subject != "All":
        filtered_df = cached_df[cached_df['SUBJECT_NAME'] == selected_subject]
    else:
        filtered_df = cached_df.copy()

    table_data = filtered_df.to_dict(orient='records')
    columns = filtered_df.columns.tolist()

    return render_template('dashboard.html',
                           table_data=table_data,
                           columns=columns,
                           subject_list=subject_list,
                           selected_subject=selected_subject or "All")

@app.route('/refresh', methods=['POST'])
def refresh_data():
    global cached_df
    cached_df = generate_mock_data()
    return redirect(url_for('dashboard'))

if __name__ == '__main__':
    app.run(debug=True)




<!DOCTYPE html>
<html>
<head>
    <title>Mock Dashboard</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
    <style>
        body {
            padding: 30px;
            background-color: #f8f9fa;
        }
        .table-container {
            margin-top: 30px;
        }
        .filter-section {
            margin-bottom: 20px;
        }
    </style>
</head>
<body>

    <h2 class="mb-4">ðŸ“Š Mock Subject Dashboard</h2>

    <!-- Filter Form -->
    <form method="POST" action="/">
        <div class="row filter-section align-items-end">
            <div class="col-md-4">
                <label for="subject_name" class="form-label">Filter by Subject Name:</label>
                <select class="form-select" name="subject_name" id="subject_name">
                    <option value="All" {% if selected_subject == "All" %}selected{% endif %}>All</option>
                    {% for subject in subject_list %}
                        <option value="{{ subject }}" {% if selected_subject == subject %}selected{% endif %}>{{ subject }}</option>
                    {% endfor %}
                </select>
            </div>
            <div class="col-md-2 mt-2 mt-md-0">
                <button type="submit" class="btn btn-primary w-100">Apply Filter</button>
            </div>
        </div>
    </form>

    <!-- Refresh Button Form -->
    <form method="POST" action="{{ url_for('refresh_data') }}">
        <div class="row mb-3">
            <div class="col-md-2">
                <button type="submit" class="btn btn-warning w-100">ðŸ”„ Refresh</button>
            </div>
        </div>
    </form>

    <!-- Table -->
    <div class="table-container">
        <table class="table table-bordered table-striped">
            <thead class="table-dark">
                <tr>
                    {% for col in columns %}
                        <th>{{ col }}</th>
                    {% endfor %}
                </tr>
            </thead>
            <tbody>
                {% for row in table_data %}
                    <tr>
                        {% for col in columns %}
                            <td>{{ row[col] }}</td>
                        {% endfor %}
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>

</body>
</html>



body {
    background-color: #f8f9fa;
    padding: 30px;
}

.table-container {
    margin-top: 30px;
}

.filter-section {
    margin-bottom: 20px;
}



Flask
pandas
